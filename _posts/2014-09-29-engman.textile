---
layout: post
title: A guide for new engineering mananagers
wip: true
---

h1. {{ page.title }}

p(meta). 29 Sep 2013

Here is what you do.

h2. Your primary responsibilities include:
<br />

# Attract, nurture, coach, and retain talent. Talk to engineers to tease out bubbling concerns, then fix them if you can. Fire bullies and underperformers.
# Be the tiebreaker when the development team can't reach consensus.
# Communicate to every engineer the next most important issue to work on.
# Be the information hub. Know what every engineer is working on, and help connect the dots that wouldn't otherwise get connected.
# Provide administrative support. Appraise, assign, and schedule bug tracker issues, coordinate releases, and make sure the bureaucratic machine keeps ticking.
# Enforce behavioral standards if people mistreat each other.

<h2 style="margin-left: -8px;"><br />Your primary responsibilities do not include:<br /><br /></h2>

#_ Personally fixing bugs and shipping features. You have to write code to remain an effective tiebreaker, but that's where your coding responsibilities end.
# Supervising the quality or volume of people's work. Software engineering isn't an assembly line. If you find yourself supervising too often, you haven't attracted the right people or given them the right incentives.

<h2 style="margin-left: -8px;"><br />Emotions, people, and culture<br /><br /></h2>

#_ Management happens to have prestige associated with it in our culture, but it's a skill like any other. Prestige is a distraction; guard against believing you're any better than anyone else. The sooner you get over prestige, the sooner you can focus on doing your job well.
# If you feel something's wrong, you're probably right. Don't let anyone bully you into ignoring your feelings.
# If find yourself blaming someone, you're probably wrong. Nobody wakes up and tries to do a bad job. 95% of the time you can resolve your feelings by just talking to people.
# Most people won't easily share their emotions. Have frequent informal conversations, and tease out everything that might be wrong. Then fix it if you can.
# Have the courage to say what everyone knows to be true but isn't saying. It's your job now.
# Have the courage to say what everyone should know but doesn't. It's your job too now too.
# Hire great people, then trust them completely. Evaluate performance on monthly basis, then fire if you have to. Don't evaluate people daily, it will drive everyone (including you) insane.

<h2 style="margin-left: -8px;"><br />Tiebreaking<br /><br /></h2>

#_ Don't judge too quickly, you're right less often than you think. Even if you're sure you're right in any given case, wait until everyone's opinion is heard.
# Once everyone is heard, summarize all points of view so clearly that people say "Thanks, I wish I'd thought of putting it that way." List any points of agreement with each view, and state what you've learned from everyone. Then make your decision.
# Once you've made your decision, enforce it. Don't let the team waste time going in circles to placate strong voices.

<h2 style="margin-left: -8px;"><br />Conflict resolution<br /><br /></h2>

#_ When disagreement gets personal, or people don't accept well-reasoned decisions, it's turned into conflict.
# Foo

<h2 style="margin-left: -8px;"><br />Rough edge<br /><br /></h2>

#_ Foo
# Bar

