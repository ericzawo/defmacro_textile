---
layout: post
title: Distribution
wip: true
---

h1. {{ page.title }}

p(meta). 08 Mar 2015

A startup is a living proof by induction. The base case is a product that a small subset of target customers love. The inductive step is superlinear distribution. You put some amount of dollars in, and get an asymptotically larger amount of users (and dollars) out. The medium to support superlinear distribution is a large, fertile market.

There is "art and science to building great products":/2013/09/26/products.html, and if you're perceptive and willing to work hard you can usually figure out the base case for almost any idea. Building something just one person will love isn't _that_ hard once you get the knack for it. And if your product satisfies one person, it will usually satisfy a dozen. The world is a big place.

The question is how to go from a dozen happy users to a hundred million in just a few years. When it comes to the inductive step, you can't make every idea work by a sheer force of will or puritan work ethic, any more than you can hit the moon with bow and arrow after years of diligent practice. Tenacity, determination, resourcefulness -- all are necessary but insufficient. If you want a moon shot, it's not enough to work hard. You have to work hard on the right problem.

So you need a method to generate startup ideas and separate promising problems from unpromising ones. One school of thought is that no such method could be devised, so you should just work on what interests you and see what sticks. I don't think so. I'm interested in Lisp compilers, and I know I could make one _someone_ will love. But it's obviously a bad startup idea. Following your dreams only works if they don't run counter to natural laws that govern how technology gets adopted. Let's examine these laws and see show they work.

