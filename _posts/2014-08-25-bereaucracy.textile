---
layout: post
title: A hacker's guide to bereaucracies
wip: true
---

h1. {{ page.title }}

p(meta). 25 Aug 2014

In hacker lore bereaucracy is synonymous with incompetence at best and malice at worst. It's an evil to be eradicated rather than a virtue to be cultivated. But I think we got this wrong. I can think of lethally effective bereaucracies like Napoleon's army just as easily as profoundly complacent ones like General Motors circa 2009. Even if we set aside the extremes, there is a wide continuum in between -- from Facebook, to Google, to Walgreens, to the Federal Government.

Most hackers reject bereaucracy outright, which is surprisingly atypical considering the hacker culture. In our pursuit to advance the state of the art and prod concepts and systems for the sake of intellectual curiosity, we consider and scrutinize every tool at our disposal. Why not approach bereaucracies in the same spirit?

When we founded RethinkDB a few years ago, every part of the company was run by consensus. This method ended up breaking down for some parts of the company, so we replaced the parts that didn't work with other forms of governance. Many parts still operate by consensus. Others are now governed by benevolent dictatorship.

During this process of trial and error we stubled on a recurring problem where neither consensus nor benevelont dictatorship were particularly effective. Over time the development team evolved a fairly sophisticated bereaucratic process which turned out to dramatically outperform other forms of governance.

h2. Bereaucracy done right

ReQL proposal process.

h2. Why it works

* Minimum possible links
* Finite time
* Bias for action
* Market backpressure
* A champion






