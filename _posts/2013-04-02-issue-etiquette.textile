---
layout: post
title: Github issue etiquette
wip: true
---

h1. {{ page.title }}

p(meta). 02 Apr 2013

h2. Issue etiquette guidelines

Here is a list of simple guidelines that can go a very long way to keep users happy:

h3. IE0. Acknowledge receipt

It isn't always possible to start working on an issue immediately, and that's ok. But nothing is worse than submitting an issue and getting no response from the team for days. A simple receipt acknowledgment from a human goes a very long way to make the user happy.

Here is an example of a really good receipt acknowledgement:

bq. Hi @xyz, thanks for letting us know about this bug. This is @wmrowan's and @mlucy's domain, I'll ask one of them to take a look. I'll get back to you when we start looking at it -- we should be able to get to it in a day or two.

In addition to the receipt acknowledgement, this message includes three key pieces of information:

* List of people responsible for the issue
* List of next steps
* An ETA for next point of communication

It's everything necessary to keep the user from wondering about the state of the issue.
 
h3. IE1. Acknowledge beginning of work

Once you start working on the issue, give the user a quick note that you're looking into it. It's nice for the user to know when their issue is being worked on, and it's very useful to be able to talk to the person who's actually working on it.

bq. Hi @xyz, I'm looking into this issue. I'll get back to you when I have a little more info, should take an hour or so.

This simple message contains a few key pieces of information:

* It comes from the person working on the issue
* It lets the user know work began, so they don't have to wonder
* It gives an ETA for next point of contact

Addtionally, from the POV of the development team, it's great to know that someone's on the issue already, so this helps both the user and the development team.

h3. IE2. Summarize the state of the issue

Once you've looked into the issue, give the user a summary of the state of affairs. Here's an example of a really good summary:

bq. Hi @xyz, I've started looking into this. It looks like the server is crashing because the random number generator is broken. The random number generator that we use uses the keyboard to generate entropy, but the RandomNoKeyboardException indicates that you seem to be running on a server with no active keyboard. I'm now working on switching the random number generator to the one that uses page fault count for entropy, which will alleviate this problem. It should take me about two days to implement and test this.

This message informs the user about all of the following:

* What was wrong
* Why the developer is confident that's the case
* How it'll be fixed
* How long it will take
* The next point of contact

It also comes from the developer working on the issue, so the user can contact them about the issue directly.

h3. IE3. Give periodic updates

Sometimes development takes longer than expected, and sometimes the ETA is too far into the future. In both cases the user will understandably get antsy without periodic feedback. It's usually extremely helpful to give a quick and informative update on the state of development.

bq. Hi @xyz. I've plugged in the new random number generator based on page fault count and it seems to be working well. The server passes all the tests which stress the generator pretty heavily. We still need to test what happens on a server without a keyboard. I'm handing this off to @coffeemug -- he says he should be able to test this in the next day. Unless we run into unexpected issues, we should be able to get the fix to you in the next two days.

This message gives the user a few valuables pieces of information:

* What has already been done
* What the state of the issue is with the current changes
* What still remains to be done
* Who's responsible for it
* It informs the user that the original developer has been communicating with the new developer who'll be taking over
* How long it will take to finish remaining work
* When the user should be able to get the fix

This is incredibly helpful for both the user and the development team.

h3. IE4. Make responsibility clear

In *IE3* @srh hands off the responsibility for the issue to @coffeemug. Until @coffeemug responds, the issue is still in @srh's court, and he's responsible for giving periodic updates and ping @coffeemug until @coffeemug responds to pick up responsibility. Here's an example message from @coffeemug that picks up responsibility and frees @srh from control of the issue:

bq. Hi @xyz, I'm on this. As @srh said, it should take me about a day to get this tested. I'll keep you posted on my progress.

It's really important for the user to feel that there is one person in control and responsible at any given time, so it's really important for the developers to hand off and pick up the issue, and make it clear that there's internal communication. For complex issues that require a lot of collaboration, that means lots of back and forth in public, and lots of period updates. That's great -- it's hard to overcommunicate.

h3. IE5. Notify about completion

Mention commit number and reviewers. Say what's been done. Say what tests were done to verify. Say when it'll be available and via which release.

h3. IE6. Notify about availability

Mention release number, download URL, thank everyone for their work.

h2. Common mistakes

There are also some mistakes everyone makes. Try not to make them.

h3. IE7. Elaborate the next steps

Foo bar.

h3. IE8. Stay in control

Foo bar.

h3. IE9. Give enough information

Foo bar.

h3. IE10. Inform everyone if you slip

Foo bar.

h3. IE11. Inform everyone you're on track

Foo bar.

h3. IE12. Use friendly tone

Foo bar.